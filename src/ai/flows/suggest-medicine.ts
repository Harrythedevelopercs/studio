// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Suggests appropriate medicines based on the wound analysis.
 *
 * - suggestMedicine - A function that handles the medicine suggestion process based on wound analysis.
 * - SuggestMedicineInput - The input type for the suggestMedicine function.
 * - SuggestMedicineOutput - The return type for the suggestMedicine function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestMedicineInputSchema = z.object({
  woundDescription: z
    .string()
    .describe('The description of the wound, including characteristics and severity.'),
});
export type SuggestMedicineInput = z.infer<typeof SuggestMedicineInputSchema>;

const SuggestMedicineOutputSchema = z.object({
  medicines: z.array(z.string()).describe('A list of suggested medicines for the wound.'),
  disclaimer: z.string().describe('A disclaimer to consult with a healthcare professional.'),
});
export type SuggestMedicineOutput = z.infer<typeof SuggestMedicineOutputSchema>;

export async function suggestMedicine(input: SuggestMedicineInput): Promise<SuggestMedicineOutput> {
  return suggestMedicineFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestMedicinePrompt',
  input: {schema: SuggestMedicineInputSchema},
  output: {schema: SuggestMedicineOutputSchema},
  prompt: `You are a medical expert specializing in wound care.

  Based on the wound description, suggest a list of appropriate medicines.  Include a disclaimer to consult with a healthcare professional.

  Wound Description: {{{woundDescription}}}
  `,
});

const suggestMedicineFlow = ai.defineFlow(
  {
    name: 'suggestMedicineFlow',
    inputSchema: SuggestMedicineInputSchema,
    outputSchema: SuggestMedicineOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
